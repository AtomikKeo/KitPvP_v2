command /start <string> <integer=4>:
    trigger:
        if arg-1 is "Stock":
            set {game.mode} to "Stock"
            set {game.players::*} to all players
            set {game.results::1} to "<magenta>=====結果====="
            loop all players:
                set {%loop-player%.stock} to arg-2
                set level of loop-player to arg-2
                set {%loop-player%.killstreak} to 0
                set {_game.%loop-player%.kill} to {%loop-player%.kill}
                set {_game.%loop-player%.damage} to {%loop-player%.damage}
                set {_game.%loop-player%.death} to {%loop-player%.death}
                execute loop-player command "/spawnpoint"
        else:
            message "<yellow>ゲームモード<magenta>%arg-1%<yellow>は存在しません。"
            stop
        send title "<orange>%arg-2%ストック戦" with subtitle "%{game.players::*}%" to all players for 3 seconds
        wait 3 seconds
        send title "<lime>3" to all players
        wait 1 seconds
        send title "<yellow>2" to all players
        wait 1 seconds
        send title "<red>1" to all players
        wait 1 seconds
        send title "<orange>GO!" to all players
        while size of {game.players::*} > 1:
            wait 1 seconds
        set {_winner} to first element of {game.players::*}
        set {_kill} to  {%{_winner}%.kill} - {_game.%{_winner}%.kill}
        set {_death} to  {%{_winner}%.death} - {_game.%{_winner}%.death}
        set {_damage} to  {%{_winner}%.damage} - {_game.%{_winner}%.damage}
        set {_point} to calcPoint(1,{_kill},{_damage})
        changePoint({_winner}, {_point})
        add "<orange>1位 %{_winner}%  K/D:%{_kill}%/%{_death}% Damage:%{_damage}%" to {game.results::*}
        loop {game.results::*}:
            broadcast "%loop-value%"
        delete {game.type}
        delete {game.players::*}
        delete {game.results::*}

on respawn:
	wait 1 tick
	{game.type} is "Stock"
	set level of player to {stock.%player%}
    
on death of player:
    {game.type} is "Stock"
    remove 1 from {stock.%victim%}
    {stock.%victim%} is 0
    broadcast "<red>%victim%さんが脱落しました。"
    set {_kill} to  {%victim%.kill} - {_game.%victim%.kill}
    set {_death} to  {%victim%.death} - {_game.%victim%.death}
    set {_damage} to  {%victim%.damage} - {_game.%victim%.damage}
    set {_point} to calcPoint(1,{_kill},{_damage})
    changePoint(victim, {_point})
    add "%size of {game.players::*}%位 %victim% K/D:%{_kill}%/%{_death}% Damage:%{_damage}%" to {game.results::*}
    wait 1 tick #stats用
    remove victim from {game.players::*}

#回復キット
on rightclick on redstone block:
    block under event-block is anvil
    set event-block to red stained glass
    set {_kit} to {%player%.kit}
    if {kits.%{_kit}%.rank} is "Element":
        heal player by max health of player * 0.5
        add 5 to player's food level
    if {kits.%{_kit}%.rank} is "Bizarre":
        heal player by max health of player * 0.4
        add 4 to player's food level
    if {kits.%{_kit}%.rank} is "Occult":
        heal player by max health of player * 0.3
        add 3 to player's food level
    if {kits.%{_kit}%.rank} is "Myth":
        heal player by max health of player * 0.25
        add 2.5 to player's food level
    if {kits.%{_kit}%.rank} is "Eclipse":
        heal player by max health of player * 0.2
        add 2 to player's food level
    wait 10 seconds
    set event-block to redstone block

#補給キット
on rightclick on dispenser:
    block under event-block is anvil
    set {_eb} to type of event-block
    set event-block to black stained glass
    set {_kit} to {%player%.kit}
    if player have bow:
        if {kits.%{_kit}%.rank} is "Element":
            give 32 arrows to player
        if {kits.%{_kit}%.rank} is "Bizarre":
            give 24 arrows to player
        if {kits.%{_kit}%.rank} is "Occult":
            give 16 arrows to player
        if {kits.%{_kit}%.rank} is "Myth":
            give 12 arrows to player
        if {kits.%{_kit}%.rank} is "Eclipse":
            give 8 arrows to player
    loop all items in player's inventory:
        repair loop-item
    loop {kits.%{_kit}%.items::*}:
        loop-value is gunpowder
        name of loop-value contains "弾薬"
        give 2 of {items::Ammo} to player
        exit loop
    wait 10 seconds
    set event-block to {_eb}

on rightclick on anvil:
    player's gamemode is not creative
    cancel event

on place:
    name of player's tool exists
    cancel event

#on rightclick:
#    name of player's tool exists
#    cancel event

on projectile hit:
    delete projectile

function calcPoint(r: int, k: int, d: number) :: int:
    set {_p} to 0
    if {_r} is 1:
        add 500 to {_p}
    else if {_r} is 2:
        add 400 to {_p}
    else if {_r} is 3:
        add 200 to {_p}
    else:
        add 100 to {_p}
    add {_k} * 100 + round({_d}) to {_p}
    return {_p}